// Pick a color for your scheme:  see paletton.com
$picked-color: #275183;
// Adjust sat/lightness of the hue of picked color
$cs-primary: hsl(hue($picked-color), 60%, 40%);
// Select your scheme from the list 
$cs-scheme: accented-analogic; // mono, complement, triad, tetrad, analogic, accented-analogic
// How distant do you want the hue offset to be:
$cs-hue-offset: 30;
// How distant do you want tints and shades to be from their base:
$cs-brightness-offset: 0;
$cs-color-model: ryb; // rgb, ryb

//  Generate set of your four main colors based on the settings above
$primary : cs-primary();
$secondary : cs-secondary();
$tertiary : cs-tertiary();
$quadrary : cs-quadrary();

$ts-offset: 20%;  //increment amount to shift tint or shade of a color 

// Set the main html element here  http://www.w3schools.com/html/html5_new_elements.asp
// Set other selectors in the coressponding layout files
@include selector-colors(body, $primary);
@include selector-colors(main, $tertiary);
@include selector-colors(aside, $primary, -1);
@include selector-colors(article, $primary, 3);

// $debug-list: join($debug-list, '---LOCATION-base/_color.scss:27'); 
// $debug-list: join($debug-list, ());



// @include cs-style(primary,cs-primary());
// @include cs-style(primary-l,tint(cs-primary(),$ts-offset)); 
// @include cs-style(primary-ll,tint(cs-primary(),$ts-offset*2)); 
// @include cs-style(primary-lll,tint(cs-primary(),$ts-offset*3)); 
// @include cs-style(primary-d,shade(cs-primary(),$ts-offset)); 
// @include cs-style(primary-dd,shade(cs-primary(),$ts-offset*2)); 
// @include cs-style(primary-ddd,shade(cs-primary(),$ts-offset*3));

// @include cs-style(secondary,cs-secondary());
// @include cs-style(secondary-l,tint(cs-secondary(),$ts-offset)); 
// @include cs-style(secondary-ll,tint(cs-secondary(),$ts-offset*2)); 
// @include cs-style(secondary-lll,tint(cs-secondary(),$ts-offset*3)); 
// @include cs-style(secondary-d,shade(cs-secondary(),$ts-offset)); 
// @include cs-style(secondary-dd,shade(cs-secondary(),$ts-offset*2)); 
// @include cs-style(secondary-ddd,shade(cs-secondary(),$ts-offset*3));

// @include cs-style(tertiary,cs-tertiary());
// @include cs-style(tertiary-l,tint(cs-tertiary(),$ts-offset)); 
// @include cs-style(tertiary-ll,tint(cs-tertiary(),$ts-offset*2)); 
// @include cs-style(tertiary-lll,tint(cs-tertiary(),$ts-offset*3)); 
// @include cs-style(tertiary-d,shade(cs-tertiary(),$ts-offset)); 
// @include cs-style(tertiary-dd,shade(cs-tertiary(),$ts-offset*2)); 
// @include cs-style(tertiary-ddd,shade(cs-tertiary(),$ts-offset*3));

// @include cs-style(quadrary,cs-quadrary());
// @include cs-style(quadrary-l,tint(cs-quadrary(),$ts-offset)); 
// @include cs-style(quadrary-ll,tint(cs-quadrary(),$ts-offset*2)); 
// @include cs-style(quadrary-lll,tint(cs-quadrary(),$ts-offset*3)); 
// @include cs-style(quadrary-d,shade(cs-quadrary(),$ts-offset)); 
// @include cs-style(quadrary-dd,shade(cs-quadrary(),$ts-offset*2)); 
// @include cs-style(quadrary-ddd,shade(cs-quadrary(),$ts-offset*3));


// .box {
//   display: inline-block;
//   width: 800px;
//   margin: 10px 0 0 0;
// } 

// .box-small {
//   display: inline-block;
//   text-align: center;
//   width: 100px;
//   padding: 0 20 0 20;
//   height: 40px;
// }